/** 
 **************************************************************************************
 * @file TestDataSource.java
 * @brief データベースとファイルサーバーを用いる際の、接続情報の環境変数を定義するクラスを
 * 格納するファイル。
 **************************************************************************************
 */ 
package com.springproject.dockerspring.CommonTestCaseMaker.Configure;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import lombok.Getter;








/** 
 **************************************************************************************
 * @brief データベースとファイルサーバーを用いる際の、接続情報の環境変数を定義するクラス。
 * 
 * 
 * @details 
 * - 外部の設定ファイルの環境変数を参照し、値を取り込む。
 * - プロダクトコードにも同じ環境変数クラスが存在するが、テストではこのクラスを用いるものとする。
 * - テスト時には、使用する設定ファイルを切り替えることがあるため、内容に変化がある項目がある。
 * 
 * @par 使用アノテーション
 * - @Component
 * - @Getter
 **************************************************************************************
 */ 
@Component
@Getter
public class TestDataSource {

  /** 
   *******************************************************************
   * @brief データベース接続先URL
   * 
   * @par 使用アノテーション
   * - @Value("${spring.datasource.url}")
   * 
   * @note 設定ファイルの切り替えの際に、本番環境用とモック用で内容が変わる。
   *******************************************************************
   */
  @Value("${spring.datasource.url}")
  private String url;


  /** 
   *******************************************************************
   * @brief データベースユーザー名
   * 
   * @par 使用アノテーション
   * - @Value("${spring.datasource.username}")
   * 
   * @note 設定ファイルの切り替えの際に、本番環境用とモック用で内容が変わる。
   *******************************************************************
   */
  @Value("${spring.datasource.username}")
  private String username;


  /** 
   *******************************************************************
   * @brief データベースパスワード
   * 
   * @par 使用アノテーション
   * - @Value("${spring.datasource.password}")
   * 
   * @note 設定ファイルの切り替えの際に、本番環境用とモック用で内容が変わる。
   *******************************************************************
   */
  @Value("${spring.datasource.password}")
  private String password;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時のURLを設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.url}")
   *******************************************************************
   */  
  @Value("${samba.url}")
  private String samba_url;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時のアクセスユーザー名を設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.username}")
   *******************************************************************
   */  
  @Value("${samba.username}")
  private String samba_username;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時のアクセスパスワードを設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.password}")
   *******************************************************************
   */ 
  @Value("${samba.password}")
  private String samba_password;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時の対応最小バージョン番号を設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.min-ver}")
   *******************************************************************
   */  
  @Value("${samba.min-ver}")
  private String samba_min_ver;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時の対応最大バージョン番号を設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.max-ver}")
   *******************************************************************
   */   
  @Value("${samba.max-ver}")
  private String samba_max_ver;


  /** 
   *******************************************************************
   * @brief ファイルサーバー[Samba]へ接続時のタイムアウト時間を設定する。
   * 
   * @par 使用アノテーション
   * - @Value("${samba.timeout}")
   *******************************************************************
   */   
  @Value("${samba.timeout}")
  private Integer samba_timeout;
}
