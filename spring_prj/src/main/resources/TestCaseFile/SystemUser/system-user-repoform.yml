# /** 
#  **************************************************************************************
#  * @file system-user-repoform.yml
#  * 
#  * @brief 主に[システム利用者管理機能]機能のテストにおいて、リポジトリの検索メソッド時に
#  * 使用するテストケースを格納したファイルである。
#  * 
#  * @details 
#  * - 構成としては、使用する検索ワードと、その検索ワードを使用して検索した際に想定される
#  * 結果数や、検索時のオフセットの値を定義する。
#  * - 前項のデータを、全てのフォームの項目で用意している。
#  * - なおコメントに関しては、Javaファイルのコメントと統一し、Doxygen&Javadocの書式で記述する。
#  * だが、YMLファイルはドキュメントコンパイルの対象外の為、あくまで見た目の統一である。
#  **************************************************************************************
#  */ 









# /** 
#  ************************************************************************************
#  * @var subject
#  * 
#  * @brief [検索種別]のテストケース
#  * 
#  * @details 空白や空文字は許さず[以下の指定文字]のみ受け付ける。
#  * 
#  * @param[in] normal 特に何も問題ないケース。バリデーションに関係ない場所でのテストに使用。
#  * @param[in] ok_1 有効な検索種別である[全検索]。
#  * @param[in] ok_2 有効な検索種別である[団員番号]。
#  * @param[in] ok_3 有効な検索種別である[ユーザー名]。
#  * @param[in] ok_4 有効な検索種別である[権限番号]。
#  * @param[in] ok_5 有効な検索種別である[ロック有無]。
#  * @param[in] ng_miss 違う文字列が渡されて不合格。
#  ************************************************************************************
#  */
subject:
  normal: All      
  ok_1: All
  ok_2: MemberId
  ok_3: Username
  ok_4: AuthId
  ok_5: Locking
  ng_miss: missing









# /** 
#  ************************************************************************************
#  * @var all
#  * 
#  * @brief テーブルのデータを全取得した際の検索結果の判定。
#  * 
#  * @param[in] all_answer 検索した際の想定される検索結果件数。
#  * @param[in] all_max 設定する検索結果限界数。
#  * @param[in] all_offset 設定するオフセット値。
#  * @param[in] limit_answer 検索結果限界数を小さく設定して検索した際の想定される検索結果件数。
#  * @param[in] limit_max 小さく設定する検索結果限界数。
#  * @param[in] limit_offset 小さく設定した際に設定するオフセット値。
#  ************************************************************************************
#  */
all:
  all_answer: 10
  all_max: 30
  all_offset: 0
  limit_answer: 5
  limit_max: 5
  limit_offset: 5








# /** 
#  ************************************************************************************
#  * @var exist_remain_member
#  * 
#  * @brief [団員番号]を参照検索した際のテストケース
#  * 
#  * @details 
#  * - 番号を完全一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果件数]
#  * 
#  * @param[in] word_? 1から10までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
exist_remain_member:
  word_1: [Center-001-properness-properne, 1]
  word_2: [Contact-010-properness-propern, 1]
  word_3: [Deploy-102-properness-properne, 0]
  word_4: [Invite-115-properness-properne, 0]
  word_5: [Center-001-properness-properne, 1]
  word_6: [Contact-010-properness-propern, 1]
  word_7: [Deploy-102-properness-properne, 0]
  word_8: [Invite-115-properness-properne, 0]
  word_9: [Invite-112-properness-properne, 0]
  word_10: [Center-005-properness-properne, 1]


# /** 
#  ************************************************************************************
#  * @var exist_remain_auth
#  * 
#  * @brief [権限番号]を参照検索した際のテストケース
#  * 
#  * @details 
#  * - 番号を完全一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果件数]
#  * 
#  * @param[in] word_? 1から10までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
exist_remain_auth:
  word_1: [Center-001-properness-properne, 6]
  word_2: [Contact-010-properness-propern, 4]
  word_3: [Deploy-102-properness-properne, 0]
  word_4: [Invite-115-properness-properne, 0]
  word_5: [Center-001-properness-properne, 6]
  word_6: [Contact-010-properness-propern, 4]
  word_7: [Deploy-102-properness-properne, 0]
  word_8: [Invite-115-properness-properne, 0]
  word_9: [Invite-112-properness-properne, 0]
  word_10: [Center-005-properness-properne, 0]












# /** 
#  ************************************************************************************
#  * @var member_id
#  * 
#  * @brief [団員番号]のテストケース
#  * 
#  * @details 
#  * - 番号を完全一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
member_id:
  word_1: [Center, 30, 5, 0]
  word_2: [Contact, 30, 5, 0]
  word_3: [Deploy, 30, 0, 0]
  word_4: [Invite, 30, 0, 0]
  word_5: [Center, 3, 3, 2]
  word_6: [Contact, 3, 3, 2]
  word_7: [Deploy, 3, 0, 2]
  word_8: [Invite, 3, 0, 2]
  word_9: [0, 30, 10, 0]
  word_10: [1, 30, 6, 0]
  word_11: [2, 30, 2, 0]
  word_12: [3, 30, 2, 0]
  word_13: [4, 30, 2, 0]
  word_14: [o, 30, 10, 0]
  word_15: [0, 1, 1, 1]
  word_16: [1, 1, 1, 1]
  word_17: [2, 1, 1, 1]
  word_18: [3, 1, 1, 1]
  word_19: [4, 1, 1, 1]
  word_20: [o, 1, 1, 1]








# /** 
#  ************************************************************************************
#  * @var username
#  * 
#  * @brief [ユーザー名]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
username:
  word_1: [Systemuser, 30, 2, 0]
  word_2: [Local, 30, 2, 0]
  word_3: [Admin, 30, 2, 0]
  word_4: [Creater, 30, 2, 0]
  word_5: [Template, 30, 2, 0]
  word_6: [Systemuser, 1, 1, 1]
  word_7: [Local, 1, 1, 1]
  word_8: [Admin, 1, 1, 1]
  word_9: [Creater, 1, 1, 1]
  word_10: [Template, 1, 1, 1]
  word_11: ["1", 30, 2, 0]
  word_12: ["2", 30, 1, 0]
  word_13: ["3", 30, 1, 0]
  word_14: ["4", 4, 1, 1]
  word_15: ["5", 4, 1, 1]
  word_16: ["6", 4, 1, 1]
  word_17: ["7", 30, 1, 0]
  word_18: ["8", 30, 1, 0]
  word_19: ["9", 8, 1, 2]
  word_20: ["10", 8, 1, 2]









# /** 
#  ************************************************************************************
#  * @var auth_id
#  * 
#  * @brief [権限番号]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
auth_id:
  word_1: [Center-001, 30, 6, 0]
  word_2: [Contact-010, 30, 4, 0]
  word_3: [Deploy-102, 30, 0, 0]
  word_4: [Invite-115, 30, 0, 0]
  word_5: [Center-001, 2, 2, 2]
  word_6: [Contact-010, 2, 2, 2]
  word_7: [Deploy-102, 2, 0, 2]
  word_8: [Invite-115, 2, 0, 2]
  word_9: [0, 30, 10, 0]
  word_10: [1, 30, 10, 0]
  word_11: [2, 30, 0, 0]
  word_12: [3, 30, 0, 0]
  word_13: [4, 30, 0, 0]
  word_14: [5, 30, 0, 0]
  word_15: [0, 2, 2, 4]
  word_16: [1, 2, 2, 3]
  word_17: [2, 2, 0, 2]
  word_18: [3, 2, 0, 2]
  word_19: [4, 2, 0, 2]
  word_20: [5, 2, 0, 2]









# /** 
#  ************************************************************************************
#  * @var locking
#  * 
#  * @brief [ロック有無]のテストケース
#  * 
#  * @details 
#  * - 完全一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
locking:
  word_1: [true, 30, 5, 0]
  word_2: [false, 30, 5, 0]
  word_3: [true, 2, 2, 2]
  word_4: [false, 2, 2, 2]
  word_5: [true, 30, 5, 0]
  word_6: [false, 30, 5, 0]
  word_7: [true, 2, 2, 2]
  word_8: [false, 2, 2, 2]
  word_9: [true, 30, 5, 0]
  word_10: [false, 30, 5, 0]
  word_11: [true, 2, 2, 2]
  word_12: [false, 2, 2, 2]
  word_13: [true, 30, 5, 0]
  word_14: [false, 30, 5, 0]
  word_15: [true, 2, 2, 2]
  word_16: [false, 2, 2, 2]
  word_17: [true, 30, 5, 0]
  word_18: [false, 30, 5, 0]
  word_19: [true, 2, 2, 2]
  word_20: [false, 2, 2, 2]