# /** 
#  **************************************************************************************
#  * @file facility-repoform.yml
#  * 
#  * @brief 主に[設備管理]機能のテストにおいて、リポジトリの検索メソッド時に
#  * 使用するテストケースを格納したファイルである。
#  * 
#  * @details 
#  * - 構成としては、使用する検索ワードと、その検索ワードを使用して検索した際に想定される
#  * 結果数や、検索時のオフセットの値を定義する。
#  * - 前項のデータを、全てのフォームの項目で用意している。
#  * - なおコメントに関しては、Javaファイルのコメントと統一し、Doxygen&Javadocの書式で記述する。
#  * だが、YMLファイルはドキュメントコンパイルの対象外の為、あくまで見た目の統一である。
#  **************************************************************************************
#  */ 








# /** 
#  ************************************************************************************
#  * @var subject
#  * 
#  * @brief [検索種別]のテストケース
#  * 
#  * @details 空白や空文字は許さず[以下の指定文字]のみ受け付ける。
#  * 
#  * @param[in] normal 特に何も問題ないケース。バリデーションに関係ない場所でのテストに使用。
#  * @param[in] ok_1 有効な検索種別である[全検索]。
#  * @param[in] ok_2 有効な検索種別である[設備番号]。
#  * @param[in] ok_3 有効な検索種別である[設備名]。
#  * @param[in] ok_4 有効な検索種別である[購入日]。
#  * @param[in] ok_5 有効な検索種別である[製作者]。
#  * @param[in] ok_6 有効な検索種別である[保管場所]。
#  * @param[in] ok_7 有効な検索種別である[廃棄日]。
#  * @param[in] ok_8 有効な検索種別である[その他コメント]。
#  * @param[in] ng_miss 違う文字列が渡されて不合格。
#  ************************************************************************************
#  */
subject:
  normal: All      
  ok_1: All
  ok_2: FaciId
  ok_3: FaciName
  ok_4: BuyDate
  ok_5: Producer
  ok_6: StorageLoc
  ok_7: DispDate
  ok_8: Comment
  ng_miss: missing









# /** 
#  ************************************************************************************
#  * @var all
#  * 
#  * @brief テーブルのデータを全取得した際の検索結果の判定。
#  * 
#  * @param[in] all_answer 検索した際の想定される検索結果件数。
#  * @param[in] all_max 設定する検索結果限界数。
#  * @param[in] all_offset 設定するオフセット値。
#  * @param[in] limit_answer 検索結果限界数を小さく設定して検索した際の想定される検索結果件数。
#  * @param[in] limit_max 小さく設定する検索結果限界数。
#  * @param[in] limit_offset 小さく設定した際に設定するオフセット値。
#  ************************************************************************************
#  */
all:
  all_answer: 20
  all_max: 30
  all_offset: 0
  limit_answer: 10
  limit_max: 10
  limit_offset: 10











# /** 
#  ************************************************************************************
#  * @var faci_id
#  * 
#  * @brief [設備番号]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
faci_id:
  word_1: [Center, 30, 5, 0]
  word_2: [Contact, 30, 5, 0]
  word_3: [Deploy, 30, 5, 0]
  word_4: [Invite, 30, 5, 0]
  word_5: [Center, 3, 3, 2]
  word_6: [Contact, 3, 3, 2]
  word_7: [Deploy, 3, 3, 2]
  word_8: [Invite, 3, 3, 2]
  word_9: [0, 30, 15, 0]
  word_10: [1, 30, 16, 0]
  word_11: [2, 30, 4, 0]
  word_12: [3, 30, 4, 0]
  word_13: [4, 30, 4, 0]
  word_14: [5, 30, 3, 0]
  word_15: [0, 2, 2, 4]
  word_16: [1, 2, 2, 3]
  word_17: [2, 2, 2, 2]
  word_18: [3, 2, 2, 2]
  word_19: [4, 2, 2, 2]
  word_20: [5, 2, 2, 1]







# /** 
#  ************************************************************************************
#  * @var faci_name
#  * 
#  * @brief [設備名]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
faci_name:
  word_1: [２０１９年度, 30, 4, 0]
  word_2: [２０２０年度, 30, 4, 0]
  word_3: [２０２１年度, 30, 4, 0]
  word_4: [２０２２年度, 30, 4, 0]
  word_5: [２０２３年度, 30, 4, 0]
  word_6: [２０１９年度, 3, 3, 1]
  word_7: [２０２０年度, 3, 3, 1]
  word_8: [２０２１年度, 3, 3, 1]
  word_9: [２０２２年度, 3, 3, 1]
  word_10: [２０２３年度, 3, 3, 1]
  word_11: [整然, 30, 5, 0]
  word_12: [毅然, 30, 5, 0]
  word_13: [堕落, 30, 5, 0]
  word_14: [誠実, 30, 5, 0]
  word_15: [整然, 4, 4, 1]
  word_16: [毅然, 4, 4, 1]
  word_17: [堕落, 4, 4, 1]
  word_18: [誠実, 4, 4, 1]
  word_19: [文章, 30, 10, 0]
  word_20: [ポエム, 8, 8, 2]









# /** 
#  ************************************************************************************
#  * @var buy_date
#  * 
#  * @brief [購入日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
buy_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]









# /** 
#  ************************************************************************************
#  * @var producer
#  * 
#  * @brief [製作者]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
producer:
  word_1: [３０１９年度, 30, 4, 0]
  word_2: [３０２０年度, 30, 4, 0]
  word_3: [３０２１年度, 30, 4, 0]
  word_4: [３０２２年度, 30, 4, 0]
  word_5: [３０２３年度, 30, 4, 0]
  word_6: [３０１９年度, 3, 3, 1]
  word_7: [３０２０年度, 3, 3, 1]
  word_8: [３０２１年度, 3, 3, 1]
  word_9: [３０２２年度, 3, 3, 1]
  word_10: [３０２３年度, 3, 3, 1]
  word_11: [整然, 30, 5, 0]
  word_12: [毅然, 30, 5, 0]
  word_13: [堕落, 30, 5, 0]
  word_14: [誠実, 30, 5, 0]
  word_15: [整然, 4, 4, 1]
  word_16: [毅然, 4, 4, 1]
  word_17: [堕落, 4, 4, 1]
  word_18: [誠実, 4, 4, 1]
  word_19: [文章, 30, 10, 0]
  word_20: [ポエム, 8, 8, 2]











# /** 
#  ************************************************************************************
#  * @var storage_loc
#  * 
#  * @brief [保管場所]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
storage_loc:
  word_1: [４０１９年度, 30, 4, 0]
  word_2: [４０２０年度, 30, 4, 0]
  word_3: [４０２１年度, 30, 4, 0]
  word_4: [４０２２年度, 30, 4, 0]
  word_5: [４０２３年度, 30, 4, 0]
  word_6: [４０１９年度, 3, 3, 1]
  word_7: [４０２０年度, 3, 3, 1]
  word_8: [４０２１年度, 3, 3, 1]
  word_9: [４０２２年度, 3, 3, 1]
  word_10: [４０２３年度, 3, 3, 1]
  word_11: [整然, 30, 5, 0]
  word_12: [毅然, 30, 5, 0]
  word_13: [堕落, 30, 5, 0]
  word_14: [誠実, 30, 5, 0]
  word_15: [整然, 4, 4, 1]
  word_16: [毅然, 4, 4, 1]
  word_17: [堕落, 4, 4, 1]
  word_18: [誠実, 4, 4, 1]
  word_19: [文章, 30, 10, 0]
  word_20: [ポエム, 8, 8, 2]










# /** 
#  ************************************************************************************
#  * @var disp_date
#  * 
#  * @brief [廃棄日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
disp_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]











# /** 
#  ************************************************************************************
#  * @var other_comment
#  * 
#  * @brief [その他コメント]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
other_comment:
  word_1: [このコメントは, 30, 4, 0]
  word_2: [このメッセージは, 30, 4, 0]
  word_3: [このテキストは, 30, 4, 0]
  word_4: [この文章は, 30, 4, 0]
  word_5: [このポエムは, 30, 4, 0]
  word_6: [このコメントは, 3, 3, 1]
  word_7: [このメッセージは, 3, 3, 1]
  word_8: [このテキストは, 3, 3, 1]
  word_9: [この文章は, 3, 3, 1]
  word_10: [このポエムは, 3, 3, 1]
  word_11: [現団員の, 30, 5, 0]
  word_12: [退団した人間の, 30, 5, 0]
  word_13: [楽団古参の, 30, 5, 0]
  word_14: [楽団役員の, 30, 5, 0]
  word_15: [現団員の, 4, 4, 1]
  word_16: [退団した人間の, 4, 4, 1]
  word_17: [楽団古参の, 4, 4, 1]
  word_18: [楽団役員の, 4, 4, 1]
  word_19: [重要な内容を記述, 30, 10, 0]
  word_20: [適当に記述, 8, 8, 2]