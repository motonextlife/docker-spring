# /** 
#  **************************************************************************************
#  * @file member-info-repoform.yml
#  * 
#  * @brief 主に[団員番号]機能のテストにおいて、リポジトリの検索メソッド時に
#  * 使用するテストケースを格納したファイルである。
#  * 
#  * @details 
#  * - 構成としては、使用する検索ワードと、その検索ワードを使用して検索した際に想定される
#  * 結果数や、検索時のオフセットの値を定義する。
#  * - 前項のデータを、全てのフォームの項目で用意している。
#  * - なおコメントに関しては、Javaファイルのコメントと統一し、Doxygen&Javadocの書式で記述する。
#  * だが、YMLファイルはドキュメントコンパイルの対象外の為、あくまで見た目の統一である。
#  **************************************************************************************
#  */ 









# /** 
#  ************************************************************************************
#  * @var subject
#  * 
#  * @brief [検索種別]のテストケース
#  * 
#  * @details 空白や空文字は許さず[以下の指定文字]のみ受け付ける。
#  * 
#  * @param[in] normal 特に何も問題ないケース。バリデーションに関係ない場所でのテストに使用。
#  * @param[in] ok_1 有効な検索種別である[全検索]。
#  * @param[in] ok_2 有効な検索種別である[団員番号]。
#  * @param[in] ok_3 有効な検索種別である[名前]。
#  * @param[in] ok_4 有効な検索種別である[ふりがな]。
#  * @param[in] ok_5 有効な検索種別である[性別]。
#  * @param[in] ok_6 有効な検索種別である[誕生日]。
#  * @param[in] ok_7 有効な検索種別である[入団日]。
#  * @param[in] ok_8 有効な検索種別である[退団日]。
#  * @param[in] ok_9 有効な検索種別である[メールアドレス]。
#  * @param[in] ok_10 有効な検索種別である[電話番号]。
#  * @param[in] ok_11 有効な検索種別である[現住所郵便番号]。
#  * @param[in] ok_12 有効な検索種別である[現住所]。
#  * @param[in] ok_13 有効な検索種別である[役職名]。
#  * @param[in] ok_14 有効な検索種別である[現役職着任日]。
#  * @param[in] ok_15 有効な検索種別である[職種名]。
#  * @param[in] ok_16 有効な検索種別である[配属部署]。
#  * @param[in] ok_17 有効な検索種別である[配属日]。
#  * @param[in] ok_18 有効な検索種別である[担当楽器]。
#  * @param[in] ok_19 有効な検索種別である[その他コメント]。
#  * @param[in] ng_miss 違う文字列が渡されて不合格。
#  ************************************************************************************
#  */
subject:
  normal: All      
  ok_1: All
  ok_2: Memberid
  ok_3: Name
  ok_4: NamePronu
  ok_5: Sex
  ok_6: Birthday
  ok_7: JoinDate
  ok_8: RetDate
  ok_9: Email
  ok_10: Tel
  ok_11: Postcode
  ok_12: Addr
  ok_13: Position
  ok_14: ArriDate
  ok_15: Job
  ok_16: AssignDept
  ok_17: AssignDate
  ok_18: InstCharge
  ok_19: Comment
  ng_miss: missing










# /** 
#  ************************************************************************************
#  * @var all
#  * 
#  * @brief テーブルのデータを全取得した際の検索結果の判定。
#  * 
#  * @param[in] all_answer 検索した際の想定される検索結果件数。
#  * @param[in] all_max 設定する検索結果限界数。
#  * @param[in] all_offset 設定するオフセット値。
#  * @param[in] limit_answer 検索結果限界数を小さく設定して検索した際の想定される検索結果件数。
#  * @param[in] limit_max 小さく設定する検索結果限界数。
#  * @param[in] limit_offset 小さく設定した際に設定するオフセット値。
#  ************************************************************************************
#  */
all:
  all_answer: 20
  all_max: 30
  all_offset: 0
  limit_answer: 10
  limit_max: 10
  limit_offset: 10










# /** 
#  ************************************************************************************
#  * @var member_id
#  * 
#  * @brief [団員番号]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
member_id:
  word_1: [Center, 30, 5, 0]
  word_2: [Contact, 30, 5, 0]
  word_3: [Deploy, 30, 5, 0]
  word_4: [Invite, 30, 5, 0]
  word_5: [Center, 3, 3, 2]
  word_6: [Contact, 3, 3, 2]
  word_7: [Deploy, 3, 3, 2]
  word_8: [Invite, 3, 3, 2]
  word_9: [0, 30, 15, 0]
  word_10: [1, 30, 16, 0]
  word_11: [2, 30, 4, 0]
  word_12: [3, 30, 4, 0]
  word_13: [4, 30, 4, 0]
  word_14: [5, 30, 3, 0]
  word_15: [0, 2, 2, 4]
  word_16: [1, 2, 2, 3]
  word_17: [2, 2, 2, 2]
  word_18: [3, 2, 2, 2]
  word_19: [4, 2, 2, 2]
  word_20: [5, 2, 2, 1]











# /** 
#  ************************************************************************************
#  * @var name
#  * 
#  * @brief [名前]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
name:
  word_1: [一花, 30, 4, 0]
  word_2: [二乃, 30, 4, 0]
  word_3: [三玖, 30, 4, 0]
  word_4: [四葉, 30, 4, 0]
  word_5: [五月, 30, 4, 0]
  word_6: [一花, 3, 3, 1]
  word_7: [二乃, 3, 3, 1]
  word_8: [三玖, 3, 3, 1]
  word_9: [四葉, 3, 3, 1]
  word_10: [五月, 3, 3, 1]
  word_11: [山田, 30, 5, 0]
  word_12: [佐藤, 30, 5, 0]
  word_13: [伊藤, 30, 5, 0]
  word_14: [鈴木, 30, 5, 0]
  word_15: [山田, 2, 2, 1]
  word_16: [佐藤, 2, 2, 1]
  word_17: [伊藤, 2, 2, 1]
  word_18: [鈴木, 2, 2, 1]
  word_19: [山田　一花, 30, 1, 0]
  word_20: [佐藤　五月, 1, 1, 0]











# /** 
#  ************************************************************************************
#  * @var name_pronu
#  * 
#  * @brief [ふりがな]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
name_pronu:
  word_1: [いちか, 30, 4, 0]
  word_2: [にの, 30, 4, 0]
  word_3: [みく, 30, 4, 0]
  word_4: [よつば, 30, 4, 0]
  word_5: [いつき, 30, 4, 0]
  word_6: [いちか, 3, 3, 1]
  word_7: [にの, 3, 3, 1]
  word_8: [みく, 3, 3, 1]
  word_9: [よつば, 3, 3, 1]
  word_10: [いつき, 3, 3, 1]
  word_11: [やまだ, 30, 5, 0]
  word_12: [さとう, 30, 5, 0]
  word_13: [いとう, 30, 5, 0]
  word_14: [すずき, 30, 5, 0]
  word_15: [やまだ, 2, 2, 1]
  word_16: [さとう, 2, 2, 1]
  word_17: [いとう, 2, 2, 1]
  word_18: [すずき, 2, 2, 1]
  word_19: [やまだ　いちか, 30, 1, 0]
  word_20: [さとう　いつき, 1, 1, 0]










# /** 
#  ************************************************************************************
#  * @var sex
#  * 
#  * @brief [性別]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
sex:
  word_1: [male, 30, 10, 0]
  word_2: [female, 30, 10, 0]
  word_3: [male, 3, 3, 3]
  word_4: [female, 3, 3, 3]
  word_5: [male, 30, 10, 0]
  word_6: [female, 30, 10, 0]
  word_7: [male, 3, 3, 3]
  word_8: [female, 3, 3, 3]
  word_9: [male, 30, 10, 0]
  word_10: [female, 30, 10, 0]
  word_11: [male, 3, 3, 3]
  word_12: [female, 3, 3, 3]
  word_13: [male, 30, 10, 0]
  word_14: [female, 30, 10, 0]
  word_15: [male, 3, 3, 3]
  word_16: [female, 3, 3, 3]
  word_17: [male, 30, 10, 0]
  word_18: [female, 30, 10, 0]
  word_19: [male, 3, 3, 3]
  word_20: [female, 3, 3, 3]











# /** 
#  ************************************************************************************
#  * @var birthday
#  * 
#  * @brief [誕生日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
birthday:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]











# /** 
#  ************************************************************************************
#  * @var join_date
#  * 
#  * @brief [入団日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
join_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]











# /** 
#  ************************************************************************************
#  * @var ret_date
#  * 
#  * @brief [退団日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
ret_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]









# /** 
#  ************************************************************************************
#  * @var email
#  * 
#  * @brief [メールアドレス]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
email:
  word_1: [ichika, 30, 4, 0]
  word_2: [nino, 30, 4, 0]
  word_3: [miku, 30, 4, 0]
  word_4: [yotsuba, 30, 4, 0]
  word_5: [ituki, 30, 4, 0]
  word_6: [ichika, 3, 3, 1]
  word_7: [nino, 3, 3, 1]
  word_8: [miku, 3, 3, 1]
  word_9: [yotsuba, 3, 3, 1]
  word_10: [ichika, 3, 3, 1]
  word_11: [example.co.jp, 30, 5, 0]
  word_12: [mock.ne.jp, 30, 5, 0]
  word_13: [instance.com, 30, 5, 0]
  word_14: [usage.jp, 30, 5, 0]
  word_15: [example.co.jp, 4, 4, 1]
  word_16: [mock.ne.jp, 4, 4, 1]
  word_17: [instance.com, 4, 4, 1]
  word_18: [usage.jp, 4, 4, 1]
  word_19: [.jp, 30, 15, 0]
  word_20: [.com, 2, 2, 2]









# /** 
#  ************************************************************************************
#  * @var tel
#  * 
#  * @brief [電話番号]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
tel:
  word_1: ["-012345", 30, 4, 0]
  word_2: ["-678901", 30, 4, 0]
  word_3: ["-234567", 30, 4, 0]
  word_4: ["-890123", 30, 4, 0]
  word_5: ["-456789", 30, 4, 0]
  word_6: ["-012345", 3, 3, 1]
  word_7: ["-678901", 3, 3, 1]
  word_8: ["-234567", 3, 3, 1]
  word_9: ["-890123", 3, 3, 1]
  word_10: ["-456789", 3, 3, 1]
  word_11: ["0120-", 30, 5, 0]
  word_12: ["0584-", 30, 5, 0]
  word_13: ["090-", 30, 5, 0]
  word_14: ["080-", 30, 5, 0]
  word_15: ["0120-", 4, 4, 1]
  word_16: ["0584-", 4, 4, 1]
  word_17: ["090-", 4, 4, 1]
  word_18: ["080-", 4, 4, 1]
  word_19: ["-12345-", 30, 10, 0]
  word_20: ["-67890-", 5, 5, 2]









# /** 
#  ************************************************************************************
#  * @var addr_postcode
#  * 
#  * @brief [現住所郵便番号]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
addr_postcode:
  word_1: ["123-", 30, 4, 0]
  word_2: ["456-", 30, 4, 0]
  word_3: ["789-", 30, 4, 0]
  word_4: ["012-", 30, 4, 0]
  word_5: ["345-", 30, 4, 0]
  word_6: ["123-", 3, 3, 1]
  word_7: ["456-", 3, 3, 1]
  word_8: ["789-", 3, 3, 1]
  word_9: ["012-", 3, 3, 1]
  word_10: ["345-", 3, 3, 1]
  word_11: ["-0123", 30, 5, 0]
  word_12: ["-4567", 30, 5, 0]
  word_13: ["-8901", 30, 5, 0]
  word_14: ["-2345", 30, 5, 0]
  word_15: ["-0123", 4, 4, 1]
  word_16: ["-4567", 4, 4, 1]
  word_17: ["-8901", 4, 4, 1]
  word_18: ["-2345", 4, 4, 1]
  word_19: ["0", 30, 12, 0]
  word_20: ["9", 5, 5, 2]









# /** 
#  ************************************************************************************
#  * @var addr
#  * 
#  * @brief [現住所]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
addr:
  word_1: ["東京都", 30, 4, 0]
  word_2: ["大阪府", 30, 4, 0]
  word_3: ["京都府", 30, 4, 0]
  word_4: ["北海道", 30, 4, 0]
  word_5: ["沖縄県", 30, 4, 0]
  word_6: ["東京都", 3, 3, 1]
  word_7: ["大阪府", 3, 3, 1]
  word_8: ["京都府", 3, 3, 1]
  word_9: ["北海道", 3, 3, 1]
  word_10: ["沖縄県", 3, 3, 1]
  word_11: ["東区", 30, 5, 0]
  word_12: ["西区", 30, 5, 0]
  word_13: ["南区", 30, 5, 0]
  word_14: ["北区", 30, 5, 0]
  word_15: ["東区", 4, 4, 1]
  word_16: ["西区", 4, 4, 1]
  word_17: ["南区", 4, 4, 1]
  word_18: ["北区", 4, 4, 1]
  word_19: ["12345番地", 30, 10, 0]
  word_20: ["一丁目", 4, 4, 2]









# /** 
#  ************************************************************************************
#  * @var position
#  * 
#  * @brief [役職名]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
position:
  word_1: ["総務部", 30, 4, 0]
  word_2: ["営業部", 30, 4, 0]
  word_3: ["法務部", 30, 4, 0]
  word_4: ["経理部", 30, 4, 0]
  word_5: ["人事部", 30, 4, 0]
  word_6: ["総務部", 3, 3, 1]
  word_7: ["営業部", 3, 3, 1]
  word_8: ["法務部", 3, 3, 1]
  word_9: ["経理部", 3, 3, 1]
  word_10: ["人事部", 3, 3, 1]
  word_11: ["部長", 30, 5, 0]
  word_12: ["課長", 30, 5, 0]
  word_13: ["係長", 30, 5, 0]
  word_14: ["班長", 30, 5, 0]
  word_15: ["部長", 4, 4, 1]
  word_16: ["課長", 4, 4, 1]
  word_17: ["係長", 4, 4, 1]
  word_18: ["班長", 4, 4, 1]
  word_19: ["総務部部長", 30, 1, 0]
  word_20: ["人事部部長", 1, 1, 0]










# /** 
#  ************************************************************************************
#  * @var position_arri_date
#  * 
#  * @brief [現役職着任日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
position_arri_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]









# /** 
#  ************************************************************************************
#  * @var job
#  * 
#  * @brief [職種名]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
job:
  word_1: ["営業職", 30, 4, 0]
  word_2: ["総務職", 30, 4, 0]
  word_3: ["演奏職", 30, 4, 0]
  word_4: ["経理職", 30, 4, 0]
  word_5: ["人事職", 30, 4, 0]
  word_6: ["営業職", 3, 3, 1]
  word_7: ["総務職", 3, 3, 1]
  word_8: ["演奏職", 3, 3, 1]
  word_9: ["経理職", 3, 3, 1]
  word_10: ["人事職", 3, 3, 1]
  word_11: ["総合", 30, 7, 0]
  word_12: ["一般", 30, 7, 0]
  word_13: ["専門", 30, 6, 0]
  word_14: ["総合", 4, 4, 1]
  word_15: ["一般", 4, 4, 1]
  word_16: ["専門", 4, 4, 1]
  word_17: ["総合営業職", 30, 2, 0]
  word_18: ["専門演奏職", 30, 2, 0]
  word_19: ["総合総務職", 1, 1, 0]
  word_20: ["専門営業職", 1, 1, 0]









# /** 
#  ************************************************************************************
#  * @var assign_dept
#  * 
#  * @brief [配属部署]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
assign_dept:
  word_1: ["営業部", 30, 4, 0]
  word_2: ["総務部", 30, 4, 0]
  word_3: ["経理部", 30, 4, 0]
  word_4: ["演奏部", 30, 4, 0]
  word_5: ["人事部", 30, 4, 0]
  word_6: ["営業部", 3, 3, 1]
  word_7: ["総務部", 3, 3, 1]
  word_8: ["経理部", 3, 3, 1]
  word_9: ["演奏部", 3, 3, 1]
  word_10: ["人事部", 3, 3, 1]
  word_11: ["第一課", 30, 5, 0]
  word_12: ["第二課", 30, 5, 0]
  word_13: ["第三課", 30, 5, 0]
  word_14: ["第四課", 30, 5, 0]
  word_15: ["第一課", 4, 4, 1]
  word_16: ["第二課", 4, 4, 1]
  word_17: ["第三課", 4, 4, 1]
  word_18: ["第四課", 4, 4, 1]
  word_19: ["営業部第一課", 30, 1, 0]
  word_20: ["演奏部第四課", 1, 1, 0]











# /** 
#  ************************************************************************************
#  * @var assign_date
#  * 
#  * @brief [配属日]のテストケース
#  * 
#  * @details 
#  * - 範囲一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索開始日, 検索終了日, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
assign_date:
  word_1: [1950-01-01, 1950-01-02, 30, 2, 0]
  word_2: [1950-01-10, 1950-01-11, 30, 2, 0]
  word_3: [1950-05-20, 1950-06-05, 30, 2, 0]
  word_4: [1950-06-10, 1950-06-12, 30, 2, 0]
  word_5: [1950-12-01, 1950-12-31, 30, 2, 0]
  word_6: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_7: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_8: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_9: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_10: [2000-01-11, 2000-12-01, 30, 8, 2]
  word_11: [1950-01-01, 1950-01-01, 1, 1, 1]
  word_12: [1950-01-11, 1950-01-11, 1, 1, 1]
  word_13: [1950-06-01, 1950-06-01, 1, 1, 1]
  word_14: [1950-06-11, 1950-06-11, 1, 1, 1]
  word_15: [1950-12-01, 1950-12-01, 1, 1, 1]
  word_16: [2000-01-01, 2000-01-12, 30, 4, 0]
  word_17: [2000-01-11, 2000-06-02, 30, 4, 0]
  word_18: [2000-01-01, 2000-06-01, 30, 6, 0]
  word_19: [2000-06-01, 2000-12-01, 30, 6, 0]
  word_20: [2000-01-11, 2000-12-01, 30, 8, 2]









# /** 
#  ************************************************************************************
#  * @var inst_charge
#  * 
#  * @brief [担当楽器]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
inst_charge:
  word_1: ["トランペット", 30, 4, 0]
  word_2: ["ホルン", 30, 4, 0]
  word_3: ["トロンボーン", 30, 4, 0]
  word_4: ["ユーフォニアム", 30, 4, 0]
  word_5: ["チューバ", 30, 4, 0]
  word_6: ["トランペット", 3, 3, 1]
  word_7: ["ホルン", 3, 3, 1]
  word_8: ["トロンボーン", 3, 3, 1]
  word_9: ["ユーフォニアム", 3, 3, 1]
  word_10: ["チューバ", 3, 3, 1]
  word_11: ["首席", 30, 5, 0]
  word_12: ["第一", 30, 5, 0]
  word_13: ["第二", 30, 5, 0]
  word_14: ["第三", 30, 5, 0]
  word_15: ["首席", 4, 4, 1]
  word_16: ["第一", 4, 4, 1]
  word_17: ["第二", 4, 4, 1]
  word_18: ["第三", 4, 4, 1]
  word_19: ["首席トランペット", 30, 1, 0]
  word_20: ["第二トロンボーン", 1, 1, 0]









# /** 
#  ************************************************************************************
#  * @var other_comment
#  * 
#  * @brief [その他コメント]のテストケース
#  * 
#  * @details 
#  * - 部分一致で検索した際の検索結果を判定する。なお、配列の順番を次のようになる。
#  * - [検索ワード, 検索結果の出力限界数, 検索結果の全件数を出力した際の結果数, オフセット値]
#  * 
#  * @param[in] word_? 1から20までの検索ワードと想定される結果情報
#  ************************************************************************************
#  */
other_comment:
  word_1: [このコメントは, 30, 4, 0]
  word_2: [このメッセージは, 30, 4, 0]
  word_3: [このテキストは, 30, 4, 0]
  word_4: [この文章は, 30, 4, 0]
  word_5: [このポエムは, 30, 4, 0]
  word_6: [このコメントは, 3, 3, 1]
  word_7: [このメッセージは, 3, 3, 1]
  word_8: [このテキストは, 3, 3, 1]
  word_9: [この文章は, 3, 3, 1]
  word_10: [このポエムは, 3, 3, 1]
  word_11: [現団員の, 30, 5, 0]
  word_12: [退団した人間の, 30, 5, 0]
  word_13: [楽団古参の, 30, 5, 0]
  word_14: [楽団役員の, 30, 5, 0]
  word_15: [現団員の, 4, 4, 1]
  word_16: [退団した人間の, 4, 4, 1]
  word_17: [楽団古参の, 4, 4, 1]
  word_18: [楽団役員の, 4, 4, 1]
  word_19: [重要な内容を記述, 30, 10, 0]
  word_20: [適当に記述, 8, 8, 2]